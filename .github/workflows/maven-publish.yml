# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Production build

on: workflow_dispatch

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: 1. Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
  
    - name: 2. Download Notes.jar and add it to local maven repository
      run: |
        wget 'https://domino-1.dmytro.cloud/jar.nsf/0/file/$FILE/Notes.jar' -q --show-progress
        echo "adding Notes.jar to local maven storage"
        mvn install:install-file -Dfile="Notes.jar" -DgroupId=lotus.notes -DartifactId=notes -Dversion=10.0 -Dpackaging=jar 

    - name: 3. Build with Maven
      run: |
        mvn -B package --file pom.xml
        ls -la

    - name: 4. Store artifact in GitHub
      uses: actions/upload-artifact@v2
      with:
        name: iMessageSMS
        path: iMessageSMS-*.jar
        retention-days: 1
        if-no-files-found: error

    - name: 5. Run deploy on Domino server
      uses: fjogeleit/http-request-action@master
      with:
        url: 'https://domino-1.dmytro.cloud/DeployGitHub.nsf/start?openagent'
        method: 'POST'
        contentType: application/x-www-form-urlencoded
        data: '{"run-id": "${{github.run_id}}", "repo": "$GITHUB_REPOSITORY", "repo2": "${{github.repository}}"}'
        preventFailureOnNoResponse: 'true'
        
